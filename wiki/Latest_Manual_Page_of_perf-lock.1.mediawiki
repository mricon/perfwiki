---
title: Latest Manual Page of perf-lock.1
---


= NAME =

perf-lock - Analyze lock events

= SYNOPSIS =

<pre>perf lock {record|report|script|info|contention}</pre>
= DESCRIPTION =

You can analyze various lock behaviours and statistics with this ''perf lock'' command.

<blockquote><pre>perf lock record &lt;command&gt; records lock events
between start and end &lt;command&gt;. And this command
produces the file &quot;perf.data&quot; which contains tracing
results of lock events.

perf lock report reports statistical data.

perf lock script shows raw lock events.

perf lock info shows metadata like threads or addresses
of lock instances.

perf lock contention shows contention statistics.</pre></blockquote>
= COMMON OPTIONS =

-i, --input=&lt;file&gt;

<blockquote>Input file name. (default: perf.data unless stdin is a fifo)
</blockquote>
--output=&lt;file&gt;

<blockquote>Output file name for perf lock contention and report.
</blockquote>
-v, --verbose

<blockquote>Be more verbose (show symbol address, etc).
</blockquote>
-q, --quiet

<blockquote>Do not show any warnings or messages. (Suppress -v)
</blockquote>
-D, --dump-raw-trace

<blockquote>Dump raw trace in ASCII.
</blockquote>
-f, --force

<blockquote>Donâ€™t complain, do it.
</blockquote>
--vmlinux=&lt;file&gt;

<blockquote>vmlinux pathname
</blockquote>
--kallsyms=&lt;file&gt;

<blockquote>kallsyms pathname
</blockquote>
= REPORT OPTIONS =

-k, --key=&lt;value&gt;

<blockquote>Sorting key. Possible values: acquired (default), contended, avg_wait, wait_total, wait_max, wait_min.
</blockquote>
-F, --field=&lt;value&gt;

<blockquote>Output fields. By default it shows all the fields but users can customize that using this. Possible values: acquired, contended, avg_wait, wait_total, wait_max, wait_min.
</blockquote>
-c, --combine-locks

<blockquote>Merge lock instances in the same class (based on name).
</blockquote>
-t, --threads

<blockquote>The -t option is to show per-thread lock stat like below:

<blockquote><pre>$ perf lock report -t -F acquired,contended,avg_wait

Name   acquired  contended   avg wait (ns)

           perf     240569          9            5784
        swapper     106610         19             543
         :15789      17370          2           14538
   ContainerMgr       8981          6             874
          sleep       5275          1           11281
ContainerThread       4416          4             944
RootPressureThr       3215          5            1215
    rcu_preempt       2954          0               0
   ContainerMgr       2560          0               0
        unnamed       1873          0               0
EventManager_De       1845          1             636
futex-default-S       1609          0               0</pre></blockquote></blockquote>
-E, --entries=&lt;value&gt;

<blockquote>Display this many entries.
</blockquote>
= INFO OPTIONS =

-t, --threads

<blockquote>dump only the thread list in perf.data
</blockquote>
-m, --map

<blockquote>dump only the map of lock instances (address:name table)
</blockquote>
= CONTENTION OPTIONS =

-k, --key=&lt;value&gt;

<blockquote>Sorting key. Possible values: contended, wait_total (default), wait_max, wait_min, avg_wait.
</blockquote>
-F, --field=&lt;value&gt;

<blockquote>Output fields. By default it shows all but the wait_min fields and users can customize that using this. Possible values: contended, wait_total, wait_max, wait_min, avg_wait.
</blockquote>
-t, --threads

<blockquote>Show per-thread lock contention stat
</blockquote>
-b, --use-bpf

<blockquote>Use BPF program to collect lock contention stats instead of using the input data.
</blockquote>
-a, --all-cpus

<blockquote>System-wide collection from all CPUs.
</blockquote>
-C, --cpu=&lt;value&gt;

<blockquote>Collect samples only on the list of CPUs provided. Multiple CPUs can be provided as a comma-separated list with no space: 0,1. Ranges of CPUs are specified with -: 0-2. Default is to monitor all CPUs.
</blockquote>
-p, --pid=&lt;value&gt;

<blockquote>Record events on existing process ID (comma separated list).
</blockquote>
--tid=&lt;value&gt;

<blockquote>Record events on existing thread ID (comma separated list).
</blockquote>
-M, --map-nr-entries=&lt;value&gt;

<blockquote>Maximum number of BPF map entries (default: 16384). This will be aligned to a power of 2.
</blockquote>
--max-stack=&lt;value&gt;

<blockquote>Maximum stack depth when collecting lock contention (default: 8).
</blockquote>
--stack-skip=&lt;value&gt;

<blockquote>Number of stack depth to skip when finding a lock caller (default: 3).
</blockquote>
-E, --entries=&lt;value&gt;

<blockquote>Display this many entries.
</blockquote>
-l, --lock-addr

<blockquote>Show lock contention stat by address
</blockquote>
-o, --lock-owner

<blockquote>Show lock contention stat by owners. Implies --threads and requires --use-bpf.
</blockquote>
-Y, --type-filter=&lt;value&gt;

<blockquote>Show lock contention only for given lock types (comma separated list). Available values are: semaphore, spinlock, rwlock, rwlock:R, rwlock:W, rwsem, rwsem:R, rwsem:W, rtmutex, rwlock-rt, rwlock-rt:R, rwlock-rt:W, pcpu-sem, pcpu-sem:R, pcpu-sem:W, mutex

<blockquote><pre>Note that RW-variant of locks have :R and :W suffix.  Names without the
suffix are shortcuts for the both variants.  Ex) rwsem = rwsem:R + rwsem:W.</pre></blockquote></blockquote>
-L, --lock-filter=&lt;value&gt;

<blockquote>Show lock contention only for given lock addresses or names (comma separated list).
</blockquote>
-S, --callstack-filter=&lt;value&gt;

<blockquote>Show lock contention only if the callstack contains the given string. Note that it matches the substring so ''rq'' would match both ''raw_spin_rq_lock'' and ''irq_enter_rcu''.
</blockquote>
-x, --field-separator=&lt;SEP&gt;

<blockquote>Show results using a CSV-style output to make it easy to import directly into spreadsheets. Columns are separated by the string specified in SEP.
</blockquote>
--lock-cgroup

<blockquote>Show lock contention stat by cgroup. Requires --use-bpf.
</blockquote>
-G, --cgroup-filter=&lt;value&gt;

<blockquote>Show lock contention only in the given cgroups (comma separated list).
</blockquote>
= SEE ALSO =

[[Latest Manual Page of perf.1|<tt>'''perf'''(1)</tt>]]


= KERNEL VERSION =

This page is auto-generated.  The kernel version is v6.11