---
title: Latest Manual Page of perf-kvm.1
---


= NAME =

perf-kvm - Tool to trace/measure kvm guest os

= SYNOPSIS =

<pre>perf kvm [--host] [--guest] [--guestmount=&lt;path&gt;
        [--guestkallsyms=&lt;path&gt; --guestmodules=&lt;path&gt; | --guestvmlinux=&lt;path&gt;]]
        {top|record|report|diff|buildid-list} [&lt;options&gt;]
perf kvm [--host] [--guest] [--guestkallsyms=&lt;path&gt; --guestmodules=&lt;path&gt;
        | --guestvmlinux=&lt;path&gt;] {top|record|report|diff|buildid-list|stat} [&lt;options&gt;]
perf kvm stat [record|report|live] [&lt;options&gt;]</pre>
= DESCRIPTION =

There are a couple of variants of perf kvm:

<blockquote><pre>perf kvm [options] top &lt;command&gt; to generates and displays
a performance counter profile of guest os in realtime
of an arbitrary workload.

perf kvm record &lt;command&gt; to record the performance counter profile
of an arbitrary workload and save it into a perf data file. We set the
default behavior of perf kvm as --guest, so if neither --host nor --guest
is input, the perf data file name is perf.data.guest. If --host is input,
the perf data file name is perf.data.kvm. If you want to record data into
perf.data.host, please input --host --no-guest. The behaviors are shown as
following:
  Default()         -&gt;  perf.data.guest
  --host              -&gt;  perf.data.kvm
  --guest             -&gt;  perf.data.guest
  --host --guest      -&gt;  perf.data.kvm
  --host --no-guest   -&gt;  perf.data.host

perf kvm report to display the performance counter profile information
recorded via perf kvm record.

perf kvm diff to displays the performance difference amongst two perf.data
files captured via perf record.

perf kvm buildid-list to  display the buildids found in a perf data file,
so that other tools can be used to fetch packages with matching symbol tables
for use by perf report. As buildid is read from /sys/kernel/notes in os, then
if you want to list the buildid for guest, please make sure your perf data file
was captured with --guestmount in perf kvm record.

perf kvm stat &lt;command&gt; to run a command and gather performance counter
statistics.
Especially, perf kvm stat record/report generates a statistical analysis
of KVM events. Currently, vmexit, mmio (x86 only) and ioport (x86 only)
events are supported. perf kvm stat record &lt;command&gt; records kvm events
and the events between start and end &lt;command&gt;.
And this command produces a file which contains tracing results of kvm
events.

perf kvm stat report reports statistical data which includes events
handled sample, percent_sample, time, percent_time, max_t, min_t, mean_t.

perf kvm stat live reports statistical data in a live mode (similar to
record + report but with statistical data updated live at a given display
rate).</pre></blockquote>
= OPTIONS =

-i, --input=&lt;path&gt;

<blockquote>Input file name, for the ''report'', ''diff'' and ''buildid-list'' subcommands.
</blockquote>
-o, --output=&lt;path&gt;

<blockquote>Output file name, for the ''record'' subcommand. Doesn’t work with ''report'', just redirect the output to a file when using ''report''.
</blockquote>
--host

<blockquote>Collect host side performance profile.
</blockquote>
--guest

<blockquote>Collect guest side performance profile.
</blockquote>
--guestmount=&lt;path&gt;

<blockquote>Guest OS root file system mount directory. Users mount guest OS root directories under &lt;path&gt; by a specific filesystem access method, typically, sshfs. For example, start 2 guest OS, one’s pid is 8888 and the other’s is 9999:

<blockquote><pre>$ mkdir ~/guestmount
$ cd ~/guestmount
$ sshfs -o allow_other,direct_io -p 5551 localhost:/ 8888/
$ sshfs -o allow_other,direct_io -p 5552 localhost:/ 9999/
$ perf kvm --host --guest --guestmount=~/guestmount top</pre></blockquote></blockquote>
--guestkallsyms=&lt;path&gt;

<blockquote>Guest OS /proc/kallsyms file copy. perf reads it to get guest kernel symbols. Users copy it out from guest OS.
</blockquote>
--guestmodules=&lt;path&gt;

<blockquote>Guest OS /proc/modules file copy. perf reads it to get guest kernel module information. Users copy it out from guest OS.
</blockquote>
--guestvmlinux=&lt;path&gt;

<blockquote>Guest OS kernel vmlinux.
</blockquote>
--guest-code

<blockquote>Indicate that guest code can be found in the hypervisor process, which is a common case for KVM test programs.
</blockquote>
--stdio

<blockquote>Use the stdio interface.
</blockquote>
-v, --verbose

<blockquote>Be more verbose (show counter open errors, etc).
</blockquote>
= STAT REPORT OPTIONS =

--vcpu=&lt;value&gt;

<blockquote>analyze events which occur on this vcpu. (default: all vcpus)
</blockquote>
--event=&lt;value&gt;

<blockquote>event to be analyzed. Possible values: vmexit, mmio (x86 only), ioport (x86 only). (default: vmexit)
</blockquote>
-k, --key=&lt;value&gt;

<blockquote>Sorting key. Possible values: sample (default, sort by samples number), percent_sample (sort by sample percentage), time (sort by average time), precent_time (sort by time percentage), max_t (sort by maximum time), min_t (sort by minimum time), mean_t (sort by mean time).
</blockquote>
-p, --pid=

<blockquote>Analyze events only for given process ID(s) (comma separated list).
</blockquote>
= STAT LIVE OPTIONS =

-d, --display

<blockquote>Time in seconds between display updates
</blockquote>
-m, --mmap-pages=

<blockquote>Number of mmap data pages (must be a power of two) or size specification with appended unit character - B/K/M/G. The size is rounded up to have nearest pages power of two value.
</blockquote>
-a, --all-cpus

<blockquote>System-wide collection from all CPUs.
</blockquote>
-p, --pid=

<blockquote>Analyze events only for given process ID(s) (comma separated list).
</blockquote>
--vcpu=&lt;value&gt;

<blockquote>analyze events which occur on this vcpu. (default: all vcpus)
</blockquote>
--event=&lt;value&gt;

<blockquote>event to be analyzed. Possible values: vmexit, mmio (x86 only), ioport (x86 only). (default: vmexit)
</blockquote>
-k, --key=&lt;value&gt;

<blockquote>Sorting key. Possible values: sample (default, sort by samples number), time (sort by average time).
</blockquote>
--duration=&lt;value&gt;

<blockquote>Show events other than HLT (x86 only) or Wait state (s390 only) that take longer than duration usecs.
</blockquote>
--proc-map-timeout

<blockquote>When processing pre-existing threads /proc/XXX/mmap, it may take a long time, because the file may be huge. A time out is needed in such cases. This option sets the time out limit. The default value is 500 ms.
</blockquote>
= SEE ALSO =

[[Latest Manual Page of perf-top.1|<tt>'''perf-top'''(1)</tt>]], [[Latest Manual Page of perf-record.1|<tt>'''perf-record'''(1)</tt>]], [[Latest Manual Page of perf-report.1|<tt>'''perf-report'''(1)</tt>]], [[Latest Manual Page of perf-diff.1|<tt>'''perf-diff'''(1)</tt>]], [[Latest Manual Page of perf-buildid-list.1|<tt>'''perf-buildid-list'''(1)</tt>]], [[Latest Manual Page of perf-stat.1|<tt>'''perf-stat'''(1)</tt>]]


= KERNEL VERSION =

This page is auto-generated.  The kernel version is v6.9-rc3