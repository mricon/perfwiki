---
title: Latest Manual Page of perf-ftrace.1
---


= NAME =

perf-ftrace - simple wrapper for kernels ftrace functionality

= SYNOPSIS =

<pre>perf ftrace {trace|latency} &lt;command&gt;</pre>
= DESCRIPTION =

The ''perf ftrace'' command provides a collection of subcommands which use kernel’s ftrace infrastructure.

<blockquote><pre>perf ftrace trace is a simple wrapper of the ftrace.  It only supports
single thread tracing currently and just reads trace_pipe in text and then
write it to stdout.

perf ftrace latency calculates execution latency of a given function
(optionally with BPF) and display it as a histogram.</pre></blockquote>
The following options apply to perf ftrace.

= COMMON OPTIONS =

-p, --pid=

<blockquote>Trace on existing process id (comma separated list).
</blockquote>
--tid=

<blockquote>Trace on existing thread id (comma separated list).
</blockquote>
-a, --all-cpus

<blockquote>Force system-wide collection. Scripts run without a &lt;command&gt; normally use -a by default, while scripts run with a &lt;command&gt; normally don’t - this option allows the latter to be run in system-wide mode.
</blockquote>
-C, --cpu=

<blockquote>Only trace for the list of CPUs provided. Multiple CPUs can be provided as a comma separated list with no space like: 0,1. Ranges of CPUs are specified with -: 0-2. Default is to trace on all online CPUs.
</blockquote>
-v, --verbose

<blockquote>Increase the verbosity level.
</blockquote>
= OPTIONS FOR FIPERF FTRACE TRACEFR =

-t, --tracer=

<blockquote>Tracer to use when neither -G nor -F option is not specified: function_graph or function.
</blockquote>
-F, --funcs

<blockquote>List available functions to trace. It accepts a pattern to only list interested functions.
</blockquote>
-D, --delay

<blockquote>Time (ms) to wait before starting tracing after program start.
</blockquote>
-m, --buffer-size

<blockquote>Set the size of per-cpu tracing buffer, &lt;size&gt; is expected to be a number with appended unit character - B/K/M/G.
</blockquote>
--inherit

<blockquote>Trace children processes spawned by our target.
</blockquote>
-T, --trace-funcs=

<blockquote>Select function tracer and set function filter on the given function (or a glob pattern). Multiple functions can be given by using this option more than once. The function argument also can be a glob pattern. It will be passed to ''set_ftrace_filter'' in tracefs.
</blockquote>
-N, --notrace-funcs=

<blockquote>Select function tracer and do not trace functions given by the argument. Like -T option, this can be used more than once to specify multiple functions (or glob patterns). It will be passed to ''set_ftrace_notrace'' in tracefs.
</blockquote>
--func-opts

<blockquote>List of options allowed to set: call-graph - Display kernel stack trace for function tracer. irq-info - Display irq context info for function tracer.
</blockquote>
-G, --graph-funcs=

<blockquote>Select function_graph tracer and set graph filter on the given function (or a glob pattern). This is useful to trace for functions executed from the given function. This can be used more than once to specify multiple functions. It will be passed to ''set_graph_function'' in tracefs.
</blockquote>
-g, --nograph-funcs=

<blockquote>Select function_graph tracer and set graph notrace filter on the given function (or a glob pattern). Like -G option, this is useful for the function_graph tracer only and disables tracing for function executed from the given function. This can be used more than once to specify multiple functions. It will be passed to ''set_graph_notrace'' in tracefs.
</blockquote>
--graph-opts

<blockquote>List of options allowed to set: nosleep-time - Measure on-CPU time only for function_graph tracer. noirqs - Ignore functions that happen inside interrupt. verbose - Show process names, PIDs, timestamps, etc. thresh=&lt;n&gt; - Setup trace duration threshold in microseconds. depth=&lt;n&gt; - Set max depth for function graph tracer to follow.
</blockquote>
= OPTIONS FOR FIPERF FTRACE LATENCYFR =

-T, --trace-funcs=

<blockquote>Set the function name to get the histogram. Unlike perf ftrace trace, it only allows single function to calculate the histogram.
</blockquote>
-b, --use-bpf

<blockquote>Use BPF to measure function latency instead of using the ftrace (it uses function_graph tracer internally).
</blockquote>
-n, --use-nsec

<blockquote>Use nano-second instead of micro-second as a base unit of the histogram.
</blockquote>
= SEE ALSO =

[[Latest Manual Page of perf-record.1|<tt>'''perf-record'''(1)</tt>]], [[Latest Manual Page of perf-trace.1|<tt>'''perf-trace'''(1)</tt>]]


= KERNEL VERSION =

This page is auto-generated.  The kernel version is v6.1