---
title: Glossary
---

==B==

===BPF===
 [https://en.wikipedia.org/wiki/Berkeley_Packet_Filter Berkeley Packet Filter].

===BPF Counter===
 An option on ''perf stat'' where a BPF program reads counters to a BPF map rather than the regular ''read'' of a perf event file descriptor. The BPF program <br />reads the counter on context switches from an event in system wide mode. If the number of system wide per CPU events is less than the number of threads <br />or cgroups, this option can reduce file descriptor overhead.

==C==

===C2C===
 Cache-to-cache. ''perf c2c'' is a builtin perf tool for analyzing shared data accesses and problems like [[#False_Sharing|false sharing]].

===Core===
 1. Used to refer to events on the CPU's PMU, contrast with [[#Uncore|Uncore]] and [[#Offcore|Offcore]].
 2. Part of the [[#Topology|topology]] containing multiple [[#SMT|SMT]] threads.

==E==

===Event Selector===

See [[#evsel|evsel]].

===evlist===

 1. A [[Perf-Evlst|perf command]] to list the events within a [[#perf.data|perf.data]] file.
 2. A list of [[#evsel|event selectors]]. The [https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/tools/lib/perf/include/perf/evlist.h evlist API is part of libperf].

===evsel===
 An event selector describes a [[#Perf_Event|perf event]] that will be opened on multiple CPUs or threads. The [https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/tools/lib/perf/include/perf/evsel.h evsel API is part of libperf].


==F==
===False Sharing===
 When a cache line is accidentally shared, and written-to, by two threads because of the layout of data being so that it is on the same cache line.

===Flexible Event===
 The default kind of event that can be [[#Multiplexing|multiplexed]], contrast with [[#Pinned Event|pinned event]].

===Free Running Counter===
 A counter that runs through its full range of values before repeating.

==H==

===HITM===
 A load that hit a modified cacheline.

===Hyperthread===
 Intel/x86 term for [[#SMT|SMT]].

==M==

===Metric===
 Taking multiple performance counters, typcally in ''perf stat'', and then computing a human meaningful value like memory bandwidth.

===Multiplexing===
 When the number of events is greater than the hardware counters the kernel will multiplex the events. Each event is scheduled for a period of time (by default 1kHz) and then rotated.

==O==

===Offcore===
 TODO

===Off-CPU===
 Off-CPU is data collected when a [[#Task|task]] gets context switched. Brendan Gregg discusses [https://www.brendangregg.com/offcpuanalysis.html Off-CPU analysis]. Combining on-CPU time, measured with a performance counter, with off-CPU time will give wall clock time. Linux perf 5.20 adds a command line option to ''perf record'' to gather off-CPU data.

==P==

===perf.data===
 By default output from various perf commands is stored in a file named perf.data.

===Perf Event===
 A kernel abstraction used to reference data being gathered about a particular kind of kernel event.


===Pinned Event===
 Pinned events are scheduled at a higher priority to flexible events. If they can't be scheduled within the kernel they don't multiplex and enter an error state.

==S==

===SMT===
 [https://en.wikipedia.org/wiki/Simultaneous_multithreading Simultaneous multithreading].

==T==

===Task===
 Kernel term for a process (if just 1 thread) or thread.

==U==

===Uncore===
 [https://en.wikipedia.org/wiki/Uncore Functions of the microprocessor not in the core].